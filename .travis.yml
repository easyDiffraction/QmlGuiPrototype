dist: xenial
sudo: required

# See https://github.com/MUME/MMapper/blob/master/.travis.yml

git:
  depth: 1

language: cpp

matrix:
  include:
    - os: osx
      osx_image: xcode10.2
      compiler: clang
      addons:
        homebrew:
          packages:
            - cmake
            - qt5
            - clang-format
            - miniupnpc
            - lcov
            - openssl
      env:
        - MATRIX_EVAL=""
        - CLANG_FORMAT=clang-format

    - os: windows
      before_install:
        - dir C:/Program\ Files\ \(x86\)/Windows\ Kits/10/bin/10.0.17134.0/x64
        - cmd.exe /C 'cd && "C:\Program Files (x86)\Microsoft Visual Studio\2017\BuildTools\VC\Auxiliary\Build\vcvarsall.bat"
           x86 && cd && cd "C:\Users\travis\build\easyDiffraction\QmlGuiPrototype" && dir'
        - curl -vLO http://download.qt.io/official_releases/online_installers/qt-unified-windows-x86-online.exe
        - "./qt-unified-windows-x86-online.exe --verbose --script C:\Users\travis\build\easyDiffraction\QmlGuiPrototype\Scripts\qt-installer-windows.qs"
        - ls -la C:\Qt\5.12.3\msvc2017\bin\qtenv2.bat

    - os: linux
      compiler: gcc
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - sourceline: 'ppa:beineri/opt-qt-5.12.3-xenial'
          packages:
            - g++-8
            - clang-format-6.0
            - cmake
            - libminiupnpc-dev
            - lcov
            - mesa-common-dev
            - qt512-meta-full
      env:
        - QT=512 MATRIX_EVAL="CC=gcc-8 && CXX=g++-8"
        - CLANG_FORMAT=clang-format-6.0

before_install:
  - eval "${MATRIX_EVAL}"

install:
  - '[ "$TRAVIS_OS_NAME" != osx ] || brew link --force qt5'
  - '[ "$TRAVIS_OS_NAME" != osx ] || export PATH=/usr/local/opt/qt5/bin:$PATH'
  - qmake -v

before_script:
  # Linux
  - '[[ "$TRAVIS_OS_NAME" != linux || "$CXX" != g++     ]] || export QMAKESPEC=linux-g++'
  - '[ "$TRAVIS_OS_NAME" != linux ] || . /opt/qt$QT/bin/qt$QT-env.sh'
  # Mac
  - '[[ "$TRAVIS_OS_NAME" != osx || "$CXX" != clang++ ]] || export QMAKESPEC=macx-clang'
  - '[[ "$TRAVIS_OS_NAME" != osx || "$CXX" != g++     ]] || export QMAKESPEC=macx-g++'
  - '[ "$TRAVIS_OS_NAME" != osx ] || export MMAPPER_CMAKE_EXTRA=-DOPENSSL_ROOT_DIR=/usr/local/opt/openssl'
  # TODO check clang info
  - mkdir build
  - '[[ "$TRAVIS_OS_NAME" != osx || "$TRAVIS_OS_NAME" != linux ]] || cd build'
  - '[[ "$TRAVIS_OS_NAME" != osx || "$TRAVIS_OS_NAME" != linux ]] || cmake --version'
  - '[ "$TRAVIS_OS_NAME" != windows ] || dir build'
#  - cmake .. $MMAPPER_CMAKE_EXTRA -DUSE_CODE_COVERAGE=true

script:
  - echo "${PWD}"
  - '[ "$TRAVIS_OS_NAME" != osx ] || chmod +x ../Scripts/build_osx.sh'
  - '[ "$TRAVIS_OS_NAME" != osx ] || sh ../Scripts/build_osx.sh'
  - '[ "$TRAVIS_OS_NAME" != linux ] || chmod +x ../Scripts/build_linux.sh'
  - '[ "$TRAVIS_OS_NAME" != linux ] || sh ../Scripts/build_linux.sh'
  - '[ "$TRAVIS_OS_NAME" != windows ] || echo "Hello from Windows World"'


